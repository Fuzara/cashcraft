name: CashCraft CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Validate Project Structure
        run: |
          if [ $(find . -name dfx.json | wc -l) -gt 1 ]; then
            echo "Multiple dfx.json files detected. Abort.";
            exit 1;
          fi

      - name: Type & Build Check
        run: npm run ci:check

  deploy-ic:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install DFX
        run: |
          DFX_VERSION=0.27.0
          sh -ci "$(curl -fsSL https://internetcomputer.org/install.sh)"
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Deploy Canisters to ICP Mainnet
        env:
          DFX_IDENTITY: ${{ secrets.DFX_IDENTITY }}
        run: |
          dfx identity import ci_identity "$DFX_IDENTITY"
          dfx deploy --network ic
          npm run dfx:generate

      - name: Upload Canister IDs for Frontend
        uses: actions/upload-artifact@v3
        with:
          name: canister_ids
          path: .dfx/ic/canister_ids.json

  deploy-frontend:
    needs: deploy-ic
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Canister IDs
        uses: actions/download-artifact@v3
        with:
          name: canister_ids
          path: .dfx/ic

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build Next.js app
        env:
          NEXT_PUBLIC_CASHCRAFT_BACKEND_CANISTER_ID: ${{ secrets.CASHCRAFT_BACKEND_ID }}
          NEXT_PUBLIC_WALLETS_BACKEND_CANISTER_ID: ${{ secrets.WALLETS_BACKEND_ID }}
        run: npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./

